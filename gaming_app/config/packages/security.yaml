security:
    access_denied_url: /error
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: app_user_provider
            entry_point: App\Security\Authenticator
            access_denied_handler: App\Security\AccessDeniedHandler
            guard:
                authenticators:
                    - App\Security\Authenticator
                    - App\Security\AdminAuthenticator
                    - App\Security\GoogleAuthenticator
                    - App\Security\DiscordAuthenticator
                    - App\Security\FacebookAuthenticator
                                   
                   
            logout:
                path: app_logout
                # where to redirect after logout
                target: app_login
            


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/profile, roles: ROLE_USER }
         - { path: ^/admin, roles: ROLE_ADMIN }
        
    role_hierarchy:
        ROLE_USER: ROLE_USER
        ROLE_EDITOR: ROLE_EDITOR
        ROLE_ADMIN: ROLE_ADMIN
        